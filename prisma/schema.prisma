// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model User {
    id                 String              @id @default(cuid())
    clerkId            String              @unique
    firstName          String?
    lastName           String?
    email              String?             @unique
    image              String?
    PlaidSubscriptions PlaidSubscription[]
    PlaidItems         PlaidItem[]
    Subscription       Subscription[]
}

model PlaidItem {
    id                 String              @id
    user               User                @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId             String
    accessToken        String
    institutionId      String?
    institutionName    String?
    createdAt          DateTime            @default(now())
    updatedAt          DateTime            @updatedAt
    PlaidSubscriptions PlaidSubscription[]

    @@index([userId])
}

model PlaidSubscription {
    id                     String       @id @default(cuid())
    name                   String
    cost                   Int
    billingCycle           BillingCycle
    firstDate              DateTime?
    lastDate               DateTime?
    isActive               Boolean      @default(true)
    plaidPredictedNextDate DateTime?
    plaidItem              PlaidItem?   @relation(fields: [plaidItemId], references: [id])
    plaidItemId            String?
    plaidAccountId         String?
    plaidStreamId          String?
    plaidMetadata          Json?
    createdBy              User         @relation(fields: [createdById], references: [id])
    createdById            String
    createdAt              DateTime     @default(now())
    updatedAt              DateTime     @updatedAt

    @@index([name])
}

model Subscription {
    id           String               @id @default(cuid())
    name         String
    autoRenew    Boolean              @default(true)
    billingCycle BillingCycle
    startDate    DateTime
    endDate      DateTime?
    periods      SubscriptionPeriod[]
    createdBy    User                 @relation(fields: [createdById], references: [id])
    createdById  String
    createdAt    DateTime             @default(now())
    updatedAt    DateTime             @updatedAt
}

model SubscriptionPeriod {
    id             String       @id @default(cuid())
    subscription   Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)
    subscriptionId String
    price          Int
    periodStart    DateTime
    periodEnd      DateTime
    isTrial        Boolean      @default(false)

    @@index([subscriptionId])
    @@index([periodEnd])
}

enum BillingCycle {
    Weekly
    Biweekly
    Monthly
    Yearly
    Unknown
}
